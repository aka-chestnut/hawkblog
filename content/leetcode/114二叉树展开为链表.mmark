---
title: "114二叉树展开为链表"
date: 2022-01-22T17:53:51+08:00
hidehome: true
draft: false
tags: ["LeetCode"]
categories: "LeetCode"
---
LeetCode-114二叉树展开为链表 刷题记录
<!--more-->
## 思路 A

```python
# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
class Solution:
    def flatten(self, root: TreeNode) -> None:
        """
        Do not return anything, modify root in-place instead.
        """
        if not root:
            return None
        self.flatten(root.left)
        self.flatten(root.right)
        tmp = root.right
        root.right = root.left
        root.left = None
        while root.right:
            root = root.right
        root.right = tmp

```

原地旋转：通过递归，每次递归实现把右结点接到左结点之后，然后再把左结点接到 root 后 

## 思路 B

DFS算法

```python
# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
class Solution:
    def flatten(self, root: TreeNode) -> None:
        """
        Do not return anything, modify root in-place instead.
        """
        def dfs(root):
            if not root:return 
            dfs(root.right)
            dfs(root.left)
            if not root.left:
                return 
            temp = root.left 
            while temp.right:
                temp = temp.right 
            temp.right = root.right
            root.right = root.left 
            root.left = None 
        dfs(root)
```
