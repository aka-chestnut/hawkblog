---
title: "72编辑距离"
date: 2022-01-22T18:30:14+08:00
hidehome: true
draft: false
tags: ["LeetCode"]
categories: "LeetCode"
---
LeetCode-72编辑距离 刷题记录
<!--more-->
## 思路 A

dp 状态表

```python
class Solution:
    def minDistance(self, word1: str, word2: str) -> int:
        w1 = len(word1) + 1
        w2 = len(word2) + 1
        dp = [[0,]*w2 for _ in range(w1)]
        for i in range(w1):
            dp[i][0] = i
        for i in range(w2):
            dp[0][i] = i
        for i in range(1,w1):
            for j in range(1,w2):
                if word1[i-1] == word2[j-1]:
                    dp[i][j] = dp[i-1][j-1]
                else:
                    dp[i][j] = 1 + min(
                        dp[i-1][j],
                        dp[i-1][j-1],
                        dp[i][j-1]
                    )
        return dp[-1][-1]
```

## 思路 B

备忘录 

```python
class Solution:
    def minDistance(self, word1: str, word2: str) -> int:
        memo = {}

        def getbst(i,j):
            if i==-1:
                return j + 1
            if j==-1:
                return i + 1 
            if (i,j) in memo.keys():
                return memo[(i,j)]
            elif word1[i] == word2[j]:
                memo[(i,j)] =  getbst(i-1,j-1)
                return memo[(i,j)]
            else:
                memo[(i,j)] = 1 + min(
                    getbst(i-1,j),
                    getbst(i,j-1),
                    getbst(i-1,j-1)
                )
                return memo[(i,j)]
    
        return getbst(len(word1)-1,len(word2)-1)
```

## 思路 C

状态压缩
